{"ast":null,"code":"var _jsxFileName = \"/Users/desireebradish/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteConfirmPopup from \"./DeleteConfirmPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //States\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = React.useState(false);\n  const [enlargeImage, setEnlargeImage] = useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).then(() => {\n      api.getCardList().then(res => {\n        setCards(res.map(card => ({\n          name: card.name,\n          link: card.link,\n          _id: card._id,\n          likes: card.likes,\n          owner: card.owner\n        })));\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.setUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n    }).then(() => {\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => console.log(err));\n  } //Open Popups\n\n\n  function handleUpdateAvatar(avatar) {\n    api.setAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n    }).then(() => {\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => console.log(err));\n  } //Close Popups\n\n\n  function closeAllPopups() {\n    setIsAddPlaceOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteOpen(false);\n    setEnlargeImage(false);\n  }\n\n  function handleCardClick(card) {\n    setEnlargeImage(true);\n    setSelectedCard(card);\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).then(() => setIsAddPlaceOpen(false)).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(c => c._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      // Create a new array based on the existing one and put a new card into it\n      const newCards = cards.map(item => item._id === card._id ? newCard : item); // Update the state\n\n      setCards(newCards);\n      return false;\n    });\n  }\n\n  function handleDeleteWarn(card) {\n    setSelectedCard(card);\n    setIsDeleteOpen(true);\n  }\n\n  function handleDeleteConfirm(e) {\n    setIsDeleteOpen(false);\n    e.preventDefault;\n    api.removeCard(selectedCard._id).then(() => {\n      console.log(selectedCard._id);\n      const newCards = cards.filter(c => c._id !== selectedCard._id);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(currentUserContext.Provider, {\n          value: currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            userId: currentUser._id,\n            handleEditAvatarClick: handleEditAvatarClick,\n            handleEditProfileClick: handleEditProfileClick,\n            handleAddPlaceClick: handleAddPlaceClick,\n            handleCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleDeleteWarn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            onClose: closeAllPopups,\n            selectedCard: selectedCard,\n            isOpen: enlargeImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmPopup, {\n            isOpen: isDeleteOpen,\n            onClose: closeAllPopups,\n            onSubmit: handleDeleteConfirm,\n            name: \"delete\",\n            title: \"Are you sure?\",\n            buttonText: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlaceOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AmrAGxti6WB/pPVDOhZQDCJNetg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/desireebradish/around-react/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","React","useState","useEffect","api","currentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteConfirmPopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlaceOpen","setIsAddPlaceOpen","isDeleteOpen","setIsDeleteOpen","enlargeImage","setEnlargeImage","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getUserInfo","then","res","getCardList","map","card","name","link","_id","likes","owner","catch","err","console","log","handleUpdateUser","about","setUserInfo","handleUpdateAvatar","avatar","setAvatar","closeAllPopups","handleCardClick","handleAddPlaceSubmit","addCard","newCard","getInitialCards","handleCardLike","isLiked","some","c","changeLikeCardStatus","newCards","item","handleDeleteWarn","handleDeleteConfirm","e","preventDefault","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick"],"mappings":"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","sourcesContent":["import Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteConfirmPopup from \"./DeleteConfirmPopup\";\n\nfunction App() {\n  //States\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = React.useState(false);\n  const [enlargeImage, setEnlargeImage] = useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        api\n          .getCardList()\n          .then((res) => {\n            setCards(\n              res.map((card) => ({\n                name: card.name,\n                link: card.link,\n                _id: card._id,\n                likes: card.likes,\n                owner: card.owner,\n              }))\n            );\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .setUserInfo({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //Open Popups\n\n  function handleUpdateAvatar(avatar) {\n    api\n      .setAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //Close Popups\n  function closeAllPopups() {\n    setIsAddPlaceOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteOpen(false);\n    setEnlargeImage(false);\n  }\n  function handleCardClick(card) {\n    setEnlargeImage(true);\n    setSelectedCard(card);\n  }\n  function handleAddPlaceSubmit({ name, link }) {\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .then(() => setIsAddPlaceOpen(false))\n      .catch((err) => console.log(err));\n  }\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n\n    const isLiked = card.likes.some((c) => c._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      // Create a new array based on the existing one and put a new card into it\n      const newCards = cards.map((item) =>\n        item._id === card._id ? newCard : item\n      );\n\n      // Update the state\n      setCards(newCards);\n\n      return false;\n    });\n  }\n  function handleDeleteWarn(card) {\n    setSelectedCard(card);\n    setIsDeleteOpen(true);\n  }\n  function handleDeleteConfirm(e) {\n    setIsDeleteOpen(false);\n    e.preventDefault;\n    api\n      .removeCard(selectedCard._id)\n      .then(() => {\n        console.log(selectedCard._id);\n        const newCards = cards.filter((c) => c._id !== selectedCard._id);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div>\n      <div className=\"body\">\n        <div className=\"page\">\n          <currentUserContext.Provider value={currentUser}>\n            <Header />\n            <Main\n              userId={currentUser._id}\n              handleEditAvatarClick={handleEditAvatarClick}\n              handleEditProfileClick={handleEditProfileClick}\n              handleAddPlaceClick={handleAddPlaceClick}\n              handleCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleDeleteWarn}\n            />\n            <ImagePopup\n              onClose={closeAllPopups}\n              selectedCard={selectedCard}\n              isOpen={enlargeImage}\n            />\n            <DeleteConfirmPopup\n              isOpen={isDeleteOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleDeleteConfirm}\n              name=\"delete\"\n              title=\"Are you sure?\"\n              buttonText=\"Yes\"\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlaceOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <Footer />\n          </currentUserContext.Provider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}