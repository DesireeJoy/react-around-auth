{"ast":null,"code":"var _jsxFileName = \"/Users/desireebradish/around-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport Card from \"./Card\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [userName, setUserName] = React.useState(\"\");\n  const [userTitle, setUserTitle] = React.useState(\"\");\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(currentUserContext);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []);\n\n  /*#__PURE__*/\n  _jsxDEV(\"a\", {\n    href: \"#\",\n    onclick: \"callmymethod(event, 24)\",\n    children: \"Call\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n\n  function callmymethod(e, myVal) {\n    //doing custom things with myVal\n    //here I want to prevent default\n    e = e || window.event;\n    e.preventDefault();\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      // Create a new array based on the existing one and put a new card into it\n      const newCards = cards.map(item => item._id === card._id ? newCard : item); // Update the state\n\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"profile__info-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__avatar-edit\",\n          \"aria-label\": \"edit-avatar\",\n          type: \"button\",\n          onClick: props.handleEditAvatarClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"avatar Image\",\n          alt: \"Avatar Image for User\",\n          className: \"profile__avatar\",\n          src: currentUser.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__title\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__editbtn button\",\n          \"aria-label\": \"Edit\",\n          type: \"button\",\n          name: \"edit_btn\",\n          onClick: props.handleEditProfileClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"add\",\n        className: \"profile__addbtn button\",\n        type: \"button\",\n        name: \"add_btn\",\n        onClick: props.handleAddPlaceClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"grid__list\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          _id: card._id,\n          src: card.link,\n          title: card.name,\n          likes: card.likes,\n          owner: card.owner,\n          onCardLike: () => {\n            handleCardLike(card);\n          },\n          handleCardClick: () => {\n            props.handleCardClick(card);\n          },\n          handleDeleteClick: card => {\n            props.handleDeleteClick(card);\n          }\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"a+whPi0SczbkLNapRi7hRPs8gHE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/desireebradish/around-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","currentUserContext","Main","props","userName","setUserName","userTitle","setUserTitle","userAvatar","setUserAvatar","cards","setCards","currentUser","useContext","getInitialCards","then","res","catch","err","console","log","callmymethod","e","myVal","window","event","preventDefault","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","item","handleEditAvatarClick","avatar","name","about","handleEditProfileClick","handleAddPlaceClick","link","owner","handleCardClick","handleDeleteClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport Card from \"./Card\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState(\"\");\n  const [userTitle, setUserTitle] = React.useState(\"\");\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\n  const [cards, setCards] = React.useState([]);\n\n  const currentUser = React.useContext(currentUserContext);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n\n      .catch((err) => console.log(err));\n  }, []);\n\n  <a href=\"#\" onclick=\"callmymethod(event, 24)\">\n    Call\n  </a>;\n  function callmymethod(e, myVal) {\n    //doing custom things with myVal\n\n    //here I want to prevent default\n    e = e || window.event;\n    e.preventDefault();\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      // Create a new array based on the existing one and put a new card into it\n      const newCards = cards.map((item) =>\n        item._id === card._id ? newCard : item\n      );\n      // Update the state\n      setCards(newCards);\n    });\n  }\n\n  return (\n    <main className=\"content\">\n      {/* Profile Section */}\n      <section className=\"profile\">\n        <form className=\"profile__info-area\">\n          <button\n            className=\"profile__avatar-edit\"\n            aria-label=\"edit-avatar\"\n            type=\"button\"\n            onClick={props.handleEditAvatarClick}\n          />\n          <img\n            id=\"avatar Image\"\n            alt=\"Avatar Image for User\"\n            className=\"profile__avatar\"\n            src={currentUser.avatar}\n          />\n          <div className=\"profile__info\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <p className=\"profile__title\">{currentUser.about}</p>\n          </div>\n          <button\n            className=\"profile__editbtn button\"\n            aria-label=\"Edit\"\n            type=\"button\"\n            name=\"edit_btn\"\n            onClick={props.handleEditProfileClick}\n          />\n        </form>\n        <button\n          aria-label=\"add\"\n          className=\"profile__addbtn button\"\n          type=\"button\"\n          name=\"add_btn\"\n          onClick={props.handleAddPlaceClick}\n        />\n      </section>\n      {/* Grid Section */}\n      <section className=\"grid\">\n        <ul className=\"grid__list\">\n          {cards.map((card) => (\n            <Card\n              key={card._id}\n              card={card}\n              _id={card._id}\n              src={card.link}\n              title={card.name}\n              likes={card.likes}\n              owner={card.owner}\n              onCardLike={() => {\n                handleCardLike(card);\n              }}\n              handleCardClick={() => {\n                props.handleCardClick(card);\n              }}\n              handleDeleteClick={(card) => {\n                props.handleDeleteClick(card);\n              }}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}