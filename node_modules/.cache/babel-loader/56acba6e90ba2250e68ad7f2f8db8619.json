{"ast":null,"code":"var _jsxFileName = \"/Users/desireebradish/around-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"../images/Logo.svg\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport api from \"../utils/api\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const currentUser = React.useContext(currentUserContext);\n  console.log(currentUser._id); // Checking if you are the owner of the current card\n\n  const isOwn = 3 === currentUser._id; // Creating a variable which you'll then set in `className` for the delete button\n\n  const cardDeleteButtonClassName = `button ${isOwn ? \"grid__btn_del\" : \"grid__btn_del_hidden\"}`; // Check if the card was liked by the current user\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // Create a variable which you then set in `className` for the like button\n\n  const cardLikeButtonClassName = `button grid__heart ${isLiked ? \"grid__heart_active\" : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"grid__card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      onClick: () => {\n        props.handleDeleteClick(props.card);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"grid__btn_popup\",\n      type: \"button\",\n      \"aria-label\": \"view image\",\n      onClick: () => {\n        props.handleCardClick(props.card);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"grid__image\",\n        src: props.src,\n        alt: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid__card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"grid__caption\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid__likes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          \"aria-label\": \"like\",\n          onClick: () => {\n            props.onCardLike(props.card);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid__like-count\",\n          children: props.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/desireebradish/around-react/src/components/Card.js"],"names":["React","useState","useEffect","createContext","api","currentUserContext","Card","props","currentUser","useContext","console","log","_id","isOwn","cardDeleteButtonClassName","isLiked","card","likes","some","i","cardLikeButtonClassName","handleDeleteClick","handleCardClick","src","title","onCardLike","length"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,WAAW,GAAGR,KAAK,CAACS,UAAN,CAAiBJ,kBAAjB,CAApB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACI,GAAxB,EAFmB,CAGnB;;AACA,QAAMC,KAAK,GAAG,MAAML,WAAW,CAACI,GAAhC,CAJmB,CAMnB;;AACA,QAAME,yBAAyB,GAAI,UACjCD,KAAK,GAAG,eAAH,GAAqB,sBAC3B,EAFD,CAPmB,CAWnB;;AACA,QAAME,OAAO,GAAGR,KAAK,CAACS,IAAN,CAAWC,KAAX,CAAiBC,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACP,GAAF,KAAUJ,WAAW,CAACI,GAAnD,CAAhB,CAZmB,CAcnB;;AACA,QAAMQ,uBAAuB,GAAI,sBAC/BL,OAAO,GAAG,oBAAH,GAA0B,EAClC,EAFD;AAIA,sBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,4BACE;AACE,MAAA,SAAS,EAAED,yBADb;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,KAAK,CAACc,iBAAN,CAAwBd,KAAK,CAACS,IAA9B;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,oBAAW,YAHb;AAIE,MAAA,OAAO,EAAE,MAAM;AACbT,QAAAA,KAAK,CAACe,eAAN,CAAsBf,KAAK,CAACS,IAA5B;AACD,OANH;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAET,KAAK,CAACgB,GAAxC;AAA6C,QAAA,GAAG,EAAEhB,KAAK,CAACiB;AAAxD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YARF,eAkBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+BjB,KAAK,CAACiB;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAEJ,uBADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,wBAAW,MAHb;AAIE,UAAA,OAAO,EAAE,MAAM;AACbb,YAAAA,KAAK,CAACkB,UAAN,CAAiBlB,KAAK,CAACS,IAAvB;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA,oBAAiCT,KAAK,CAACU,KAAN,CAAYS;AAA7C;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAtDQpB,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import logo from \"../images/Logo.svg\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport api from \"../utils/api\";\nimport currentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n  const currentUser = React.useContext(currentUserContext);\n  console.log(currentUser._id);\n  // Checking if you are the owner of the current card\n  const isOwn = 3 === currentUser._id;\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `button ${\n    isOwn ? \"grid__btn_del\" : \"grid__btn_del_hidden\"\n  }`;\n\n  // Check if the card was liked by the current user\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `button grid__heart ${\n    isLiked ? \"grid__heart_active\" : \"\"\n  }`;\n\n  return (\n    <li className=\"grid__card\">\n      <button\n        className={cardDeleteButtonClassName}\n        onClick={() => {\n          props.handleDeleteClick(props.card);\n        }}\n      ></button>\n\n      <button\n        className=\"grid__btn_popup\"\n        type=\"button\"\n        aria-label=\"view image\"\n        onClick={() => {\n          props.handleCardClick(props.card);\n        }}\n      >\n        <img className=\"grid__image\" src={props.src} alt={props.title} />\n      </button>\n      <div className=\"grid__card-text\">\n        <h2 className=\"grid__caption\">{props.title}</h2>\n        <div className=\"grid__likes\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            aria-label=\"like\"\n            onClick={() => {\n              props.onCardLike(props.card);\n            }}\n          ></button>\n          <p className=\"grid__like-count\">{props.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}